<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:c="http://www.springframework.org/schema/c"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  ">

  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxTotal" value="${redis.pool.maxActive}" />
    <property name="maxIdle" value="${redis.pool.maxIdle}" />
    <property name="minIdle" value="${redis.pool.minIdle}" />
    <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
    <property name="testWhileIdle" value="false" />
    <property name="numTestsPerEvictionRun" value="-1" />
    <property name="minEvictableIdleTimeMillis" value="60000" />
    <property name="timeBetweenEvictionRunsMillis" value="30000" />
  </bean>



  <!-- =============================custom redis============================= -->
  <bean id="jedisClient" class="code.ponfee.commons.jedis.JedisClient" destroy-method="destroy">
    <constructor-arg index="0" ref="jedisPoolConfig" />
    <constructor-arg index="1" value="${redis.host}:${redis.port}:${redis.password:}" />
    <constructor-arg index="2" value="${redis.timeout}" type="int" />
    <constructor-arg index="3">
      <bean class="code.ponfee.commons.serial.KryoSerializer" />
    </constructor-arg>
  </bean>



  <!-- =============================spring redis============================= -->
  <bean id="jedisConnectionFactory" 
    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <constructor-arg index="0" ref="jedisPoolConfig" />
    <property name="hostName" value="${redis.host}" />
    <property name="port" value="${redis.port}" />
    <property name="password" value="${redis.password:}" />
    <property name="timeout" value="${redis.timeout}" />
    <property name="usePool" value="true" />
    <property name="poolConfig" ref="jedisPoolConfig" />
  </bean>

  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
    p:connectionFactory-ref="jedisConnectionFactory"
    p:enableTransactionSupport="false" 
    p:exposeConnection="false">
    <property name="keySerializer">
      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    </property>
    <property name="defaultSerializer">
      <bean class="code.ponfee.commons.jedis.spring.KryoRedisSerializer" />
    </property>
  </bean>

</beans>
