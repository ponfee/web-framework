<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc" 
  xmlns:aop="http://www.springframework.org/schema/aop" 
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
 ">

  <context:property-placeholder location="classpath:application.properties" />

  <!-- scan the package and the sub package -->
  <!-- use-default-filters="false" 指定不扫描@Service、@Repository等 -->
  <context:component-scan base-package="cn.ponfee.web.framework" use-default-filters="false">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController" />
    <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestControllerAdvice" />
  </context:component-scan>

  <aop:aspectj-autoproxy proxy-target-class="true" />

  <!-- spring bean工具类 -->
  <bean class="code.ponfee.commons.util.SpringContextHolder" />


  <!-- don't handle the static resource，静态资源的请求交由web应用服务器默认的servlet处理 -->
  <!-- http://www.cnblogs.com/fangqi/archive/2012/10/28/2743108.html -->
  <!-- location：文件目录位置；mapping：访问地址； -->
  <!-- <mvc:default-servlet-handler /> -->
  <!-- <mvc:resources mapping="/resources/**" location="/,classpath:/META-INF/publicResources/" /> -->
  <!-- <mvc:resources mapping="/static/**" location="file:///D:/app/mydist/" /> -->
  <mvc:resources mapping="/static/**" location="/static/" />
  <mvc:resources mapping="/page/**" location="/page/" />



  <!-- JSR303 Validator: if you use annotation you must configure following setting -->
  <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
    <property name="validationPropertyMap">
      <map><entry key="#{T(org.hibernate.validator.HibernateValidatorConfiguration).FAIL_FAST}" value="true" /></map>
    </property>
    <!-- 如果不加下面配置, 默认使用classpath下的 ValidationMessages.properties -->
    <!-- <property name="validationMessageSource" ref="messageSource" /> -->
  </bean>

  <bean id="contentNegotiationManager"
    class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
    <property name="favorPathExtension" value="false" />
    <property name="favorParameter" value="false" />
    <property name="ignoreAcceptHeader" value="false" />
    <property name="defaultContentType" value="application/json" />
    <!-- <property name="mediaTypes">
      <value>
        atom=application/atom+xml
        html=text/html
        json=application/json
        *=*/*
      </value>
    </property> -->
    <property name="mediaTypes">
      <props>
        <prop key="json">application/json</prop>
        <prop key="jsonp">application/javascript</prop>
        <prop key="xml">application/xml</prop>
        <prop key="html">text/html</prop>
        <prop key="atom">application/atom+xml</prop>
        <prop key="*">*/*</prop>
      </props>
    </property>
  </bean>

  <!-- mvc注解映射的支持 -->
  <mvc:annotation-driven validator="validator" content-negotiation-manager="contentNegotiationManager">
    <mvc:message-converters register-defaults="false">
      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
            <!-- <value>text/html;charset=UTF-8</value> -->
            <!-- <value>application/json;charset=UTF-8</value> -->
            <!-- <value>text/plain;charset=UTF-8</value> -->
            <value>application/json;charset=UTF-8</value>
          </list>
        </property>
      </bean>
      <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
            <value>application/json;charset=UTF-8</value>
          </list>
        </property>
        <property name="objectMapper">
          <!-- <bean class="com.fasterxml.jackson.databind.ObjectMapper">
            <property name="dateFormat">
              <bean class="java.text.SimpleDateFormat">
                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
              </bean>
            </property>
          </bean> -->
          <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
            <property name="dateFormat">
              <bean class="java.text.SimpleDateFormat">
                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
              </bean>
            </property>
            <property name="serializationInclusion">
              <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
            </property>
            <property name="featuresToEnable">
              <array>
                <util:constant static-field="com.fasterxml.jackson.core.JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN" />
                <util:constant static-field="com.fasterxml.jackson.databind.DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS" />
              </array>
            </property>
            <property name="featuresToDisable">
              <array>
                <util:constant static-field="com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE" />
              </array>
            </property>
          </bean>
        </property>
      </bean>
      <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
    </mvc:message-converters>
    <mvc:argument-resolvers>
      <bean class="code.ponfee.commons.model.PageMethodArgumentResolver" />
    </mvc:argument-resolvers>
  </mvc:annotation-driven>



  <!-- @Validated在类中注解，校验方法参数：public Result test(@Range(min=1, max=9, message="年级只能从1-9") @RequestParam(name="grade") int grade) {} -->
  <bean id="MethodValidationPostProcessor" class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
    <property name="validator">
      <bean class="code.ponfee.commons.constrain.FastFailValidatorFactoryBean" />
    </property>
  </bean>



  <!-- <mvc:cors>
    <mvc:mapping path="/**" 
      allowed-origins="${allowed_origins}" 
      allowed-methods="GET,POST,PUT,DELETE,HEAD,OPTIONS" 
      allowed-headers="X-Requested-With,Content-Type,Accept,Origin,LastModified,Authorization" 
      exposed-headers="SetCookie" allow-credentials="true" />
    <mvc:mapping path="/api/**" allowed-origins="http://domain1.com" />
  </mvc:cors> -->

  <!-- SpringMVC 拦截处理请求配置 -->
  <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <!-- 视图解析器 -->
    <property name="viewResolvers">
      <list>
        <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
        <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
          <property name="order" value="1" />
          <!-- <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" /> -->
          <property name="viewClass" value="cn.ponfee.web.framework.freemarker.ExtendedFreeMarkerView" />
          <property name="cache" value="true" />
          <property name="prefix" value="" /><!-- config已配置 -->
          <!-- <property name="suffix" value=".ftl" /> -->
          <property name="contentType" value="text/html;charset=UTF-8" />
          <property name="requestContextAttribute" value="request" />
          <property name="exposeSpringMacroHelpers" value="true" />
          <property name="exposeRequestAttributes" value="true" />
          <property name="exposeSessionAttributes" value="true" />
        </bean>
        <!-- Jsp 视图解析器 -->
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
          <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
          <property name="prefix" value="/WEB-INF/view/jsp/" />
          <property name="suffix" value=".jsp" />
        </bean>
      </list>
    </property>
    <property name="defaultViews">
      <list>
        <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
      </list>
    </property>
  </bean>


  <!-- freemaker配置 -->
  <!-- <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"> -->
  <!-- extends FreeMarkerConfigurer -->
  <bean class="cn.ponfee.web.framework.freemarker.HtmlFreeMarkerConfigurer">
    <property name="templateLoaderPath" value="/WEB-INF/view/ftl/" />
    <property name="defaultEncoding" value="UTF-8" />
    <property name="freemarkerSettings">
      <props>
        <prop key="template_update_delay">0</prop>
        <prop key="locale">zh_CN</prop>
        <prop key="default_encoding">UTF-8</prop>
        <prop key="output_encoding">UTF-8</prop>
        <prop key="url_escaping_charset">UTF-8</prop>
        <prop key="number_format">0.##########</prop>
        <prop key="date_format">yyyy-MM-dd</prop>
        <prop key="time_format">HH:mm:ss</prop>
        <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
        <prop key="classic_compatible">true</prop>
        <prop key="template_exception_handler">ignore</prop>
        <prop key="template_exception_handler">html_debug</prop>
      </props>
    </property>
    <property name="freemarkerVariables">
      <map>
        <entry key="xml_escape">
          <bean class="freemarker.template.utility.XmlEscape" />
        </entry>
        <entry key="resourcePath" value="${resourcePathWebSite:null}" />
        <entry key="jsResourcePath" value="${jsPathWebSite:null}" />
        <entry key="title" value="freemarker demo" />
      </map>
    </property>
  </bean>


  <!-- 配置“/”为默认首页 -->
  <!-- <mvc:view-controller path="/" view-name="page/dist/index.html" /> -->


  <!-- spring mvc interceptors -->
  <!-- <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <mvc:exclude-mapping path="/" />
      <bean class="cn.ponfee.web.framework.auth.test.AuthorizationInterceptor" />
    </mvc:interceptor>
  </mvc:interceptors> -->


  <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
  <bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="10485760" />
    <property name="defaultEncoding" value="UTF-8" />
    <property name="maxInMemorySize" value="40960" />
  </bean>


  <!-- grobal exceptoin handler -->
  <!-- <bean class="cn.ponfee.web.framework.web.GlobalExceptionResolver">
    <property name="resolverType" value="application/json" />
    <property name="exceptionMappings">
      <props>
        <prop key="java.lang.Exception">/WEB-INF/500</prop>
      </props>
    </property>
  </bean> -->

</beans>
